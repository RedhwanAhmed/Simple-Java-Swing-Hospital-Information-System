/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author redhwan
 */

package Admin;


import java.awt.Toolkit;
import java.sql.*;
import javax.swing.*;
import java.awt.event.*;
import Doctor.Doctor_main;
import Staff.Staff_main;

public class Login extends javax.swing.JFrame {

    Connection con = null;
    ResultSet rs = null;
    PreparedStatement pst =null;
    public String staff_id= null;
    public String patient_id;
    public String Doctor_id;
    
    /**
     * Creates new form Login_jfram
     */
    public Login() {
        initComponents();
        con=connectionDB.DBconnection();
    }
    
    public void close()
    {
    
        WindowEvent winClosingEvent = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }

   
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txt_username = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_password = new javax.swing.JPasswordField();
        cmd_login = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Login", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(102, 102, 102))); // NOI18N

        jLabel1.setText("Username");

        jLabel2.setText("Password");

        txt_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_passwordActionPerformed(evt);
            }
        });
        txt_password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_passwordKeyPressed(evt);
            }
        });

        cmd_login.setText("Login");
        cmd_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_loginActionPerformed(evt);
            }
        });
        cmd_login.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmd_loginKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_password)
                    .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(cmd_login)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmd_login)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(105, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_passwordActionPerformed

    private void cmd_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_loginActionPerformed
        // TODO add your handling code here:
        
        char first= txt_username.getText().charAt(0);
        
        
        if (first == 'S')
        {
        String sql="select ID,passwd from staff where ID=? and passwd=? ;";
        try 
        {
        
            pst = con.prepareStatement(sql);
            pst.setString(1,txt_username.getText());
            pst.setString(2,txt_password.getText());
            this.staff_id = txt_username.getText();
            rs = pst.executeQuery();
            if(rs.next())
            {
                JOptionPane.showMessageDialog(null,"WELCOME...");
                rs.close();
                pst.close();
                close();
                Staff.Staff_main s = new Staff.Staff_main();
                s.setVisible(true);
                
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Username and Password are not correct");
            }
            
        
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex);
            
        }
        finally 
        {
            try 
            {
                rs.close();
                pst.close();
                
            }
            catch(Exception ex)
            {}
        
        }
        }
        
        else if (first == 'A')
        {
            String ID = txt_username.getText();
            String pas= txt_password.getText();
            Staff_update_password a = new Staff_update_password();
            if (ID.equals(a.Admin_ID) && pas.equals(a.Admin_passwd))
            {
                JOptionPane.showMessageDialog(null,"WELCOME...");
                close();
                Admin_main s = new Admin_main();
                s.setVisible(true);
            }
            else
                JOptionPane.showMessageDialog(null,"Invalid name or password ");
               
        }
        
            else if (first == 'D')
        {
        String sql="select ID,passwd from doctor where ID=? and passwd=? ;";
        try 
        {
         
            pst = con.prepareStatement(sql);
            pst.setString(1,txt_username.getText());
            pst.setString(2,txt_password.getText());
            this.Doctor_id = txt_username.getText();
            rs = pst.executeQuery();
            if(rs.next())
            {
                
                JOptionPane.showMessageDialog(null,"WELCOME...");
                
                close();
                Doctor_main s = new Doctor_main();
                s.setVisible(true);
                
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Username and Password are not correct");
            }
            
        
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex);
            
        }
        finally 
        {
            try 
            {
                rs.close();
                pst.close();
                
            }
            catch(Exception ex)
            {}
        
        }
        }
        
           
        else
                JOptionPane.showMessageDialog(null,"Invalid name or password ");
        
    }//GEN-LAST:event_cmd_loginActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
            
    }//GEN-LAST:event_formKeyPressed

    private void cmd_loginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmd_loginKeyPressed
        // TODO add your handling code here:
        
        if (evt.getKeyCode()== KeyEvent.VK_ENTER)
        {
        char first= txt_username.getText().charAt(0);
        
        
        if (first == 'S')
        {
        String sql="select ID,passwd from staff where ID=? and passwd=? ;";
        try 
        {
         
            pst = con.prepareStatement(sql);
            pst.setString(1,txt_username.getText());
            pst.setString(2,txt_password.getText());
            this.staff_id = txt_username.getText();
            rs = pst.executeQuery();
            if(rs.next())
            {
                
                JOptionPane.showMessageDialog(null,"WELCOME...");
                rs.close();
                pst.close();
                close();
               Staff_main s = new Staff_main();
                s.setVisible(true);
                
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Username and Password are not correct");
            }
            
        
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex);
            
        }
        finally 
        {
            try 
            {
                rs.close();
                pst.close();
                
            }
            catch(Exception ex)
            {}
        
        }
        }
        
        else if (first == 'A')
        {
            String ID = txt_username.getText();
            String pas= txt_password.getText();
            Staff_update_password a = new Staff_update_password();
            if (ID.equals(a.Admin_ID) && pas.equals(a.Admin_passwd))
            {
                JOptionPane.showMessageDialog(null,"WELCOME...");
                close();
                Admin_main s = new Admin_main();
                s.setVisible(true);
            }
            else
                JOptionPane.showMessageDialog(null,"Invalid name or password ");
               
        
        
        }
        
        
                
        else if (first == 'D')
        {
        String sql="select ID,passwd from doctor where ID=? and passwd=? ;";
        try 
        {
         
            pst = con.prepareStatement(sql);
            pst.setString(1,txt_username.getText());
            pst.setString(2,txt_password.getText());
            this.Doctor_id = txt_username.getText();
            rs = pst.executeQuery();
            if(rs.next())
            {
                
                JOptionPane.showMessageDialog(null,"WELCOME...");
                rs.close();
                pst.close();
                close();
                Doctor_main s = new Doctor_main();
                s.setVisible(true);
                
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Username and Password are not correct");
            }
            
        
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex);
            
        }
        finally 
        {
            try 
            {
                rs.close();
                pst.close();
                
            }
            catch(Exception ex)
            {}
        
        }
        }
        
        else
                JOptionPane.showMessageDialog(null,"Invalid name or password ");
        
        }
        
        
        
        
      
    }//GEN-LAST:event_cmd_loginKeyPressed

    private void txt_passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_passwordKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()== KeyEvent.VK_ENTER)
        {
        char first= txt_username.getText().charAt(0);
        
        
        if (first == 'S')
        {
        String sql="select ID,passwd from staff where ID=? and passwd=? ;";
        try 
        {
         
            pst = con.prepareStatement(sql);
            pst.setString(1,txt_username.getText());
            pst.setString(2,txt_password.getText());
            this.staff_id = txt_username.getText();
            rs = pst.executeQuery();
            if(rs.next())
            {
                
                JOptionPane.showMessageDialog(null,"WELCOME...");
                rs.close();
                pst.close();
                close();
                Staff_main s = new Staff_main();
                s.setVisible(true);
                
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Username and Password are not correct");
            }
            
        
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex);
            
        }
        finally 
        {
            try 
            {
                rs.close();
                pst.close();
                
            }
            catch(Exception ex)
            {}
        
        }
        }
        
        else if (first == 'A')
        {
            String ID = txt_username.getText();
            String pas= txt_password.getText();
            Staff_update_password a = new Staff_update_password();
            if (ID.equals(a.Admin_ID) && pas.equals(a.Admin_passwd))
            {
                JOptionPane.showMessageDialog(null,"WELCOME...");
                close();
                Admin_main s = new Admin_main();
                s.setVisible(true);
            }
            else
                JOptionPane.showMessageDialog(null,"Invalid name or password ");
               
        
        
        }
        
        
                
        else if (first == 'D')
        {
        String sql="select ID,passwd from doctor where ID=? and passwd=? ;";
        try 
        {
         
            pst = con.prepareStatement(sql);
            pst.setString(1,txt_username.getText());
            pst.setString(2,txt_password.getText());
            this.Doctor_id = txt_username.getText();
            rs = pst.executeQuery();
            if(rs.next())
            {
                
                JOptionPane.showMessageDialog(null,"WELCOME...");
                close();
                Doctor_main s = new Doctor_main();
                s.setVisible(true);
                
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Username and Password are not correct");
            }
            
        
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex);
            
        }
        finally 
        {
            try 
            {
                rs.close();
                pst.close();
                
            }
            catch(Exception ex)
            {}
        
        }
        }
        
        else
                JOptionPane.showMessageDialog(null,"Invalid name or password ");
        
        }
        
        
        
        
        
    }//GEN-LAST:event_txt_passwordKeyPressed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmd_login;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables
}
